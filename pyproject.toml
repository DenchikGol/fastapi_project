[project]
name = "course-web-service"
version = "0.1.0"
description = "My pet project"
license = "MIT"
authors = [
    {name = "DenchikGol",email = "nogpoctok@yandex.ru"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard] (>=0.115.8,<0.116.0)",
    "uvicorn[standard] (>=0.34.0,<0.35.0)",
    "sqlalchemy (>=2.0.38,<3.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "pydantic-settings (>=2.8.1,<3.0.0)",
    "alembic (>=1.14.1,<2.0.0)",
    "email-validator (>=2.2.0,<3.0.0)",
    "passlib (>=1.7.4,<2.0.0)",
    "pyjwt (>=2.10.1,<3.0.0)",
    "bcrypt (>=4.3.0,<5.0.0)"
]

[tool.poetry]
packages = [{include = "course_web_service", from = "src"}]


[tool.poetry.group.dev.dependencies]
ruff = "^0.9.8"
pytest = "^8.2.0"
httpx = "^0.25.0"
pytest-asyncio = "^0.25.3"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project.scripts]  
app = "course_web_service.main:start"
migrate = "course_web_service.database.migrations_scripts:run_migrations"
makemigrations = "course_web_service.database.migrations_scripts:make_migrations"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "A",  # flake8-annotations
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming convetions
    # "D",  # pydocstyle
    "UP",  # pyupgrade
    "S",  # flake8-bandit (security)
]
ignore = [
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "D401",  # imperative mood
    "B008",  # function-call-in-default-argument (cause Depends for FastAPI)

]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["course_web_service"]
